% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensor_functions.R
\name{bin_duration}
\alias{bin_duration}
\title{Bin duration in variable time series}
\usage{
bin_duration(data, start_time, end_time, by = c("hour", "day"))
}
\arguments{
\item{data}{A data frame containing the time series.}

\item{start_time}{The column name of the start time of the interval.}

\item{end_time}{The column name of the end time of the interval.}

\item{by}{A binning specification, either \code{"hour"} or \code{"day"}.}
}
\value{
A tibble containing the group columns (if any), date, hour (if \code{by = "hour"}),
and the duration in seconds.
}
\description{
In time series with variable measurements, an often recurring task is calculating the total time
spent (i.e. the duration) in fixed bins, for example per hour or day.
}
\details{
Note that non-grouped columns are discarded in the output.
}
\examples{
data <- tibble::tibble(
  participant_id = 1,
  datetime = c("2022-06-21 15:00:00", "2022-06-21 15:55:00",
               "2022-06-21 17:05:00", "2022-06-21 17:10:00"),
  confidence = 100,
  type = c("STILL", "WALKING", "STILL", "WALKING")
)

# get the duration per hour, even if the interval is longer than one hour
data \%>\%
  dplyr::mutate(datetime = as.POSIXct(datetime)) \%>\%
  dplyr::mutate(lead = dplyr::lead(datetime)) \%>\%
  bin_duration(start_time = datetime,
               end_time = lead,
               by = "hour")

# binned_intervals also takes into account the prior grouping structure
data \%>\%
  dplyr::mutate(datetime = as.POSIXct(datetime)) \%>\%
  dplyr::mutate(lead = dplyr::lead(datetime)) \%>\%
  dplyr::group_by(participant_id, type) \%>\%
  bin_duration(start_time = datetime,
               end_time = lead,
               by = "hour")
}
